plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp' version '1.6.10-1.0.4'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.sslwireless.androidarch"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }

        variant.outputs.all {
            outputFileName = "AndroidArch-v${variant.versionCode}-${variant.versionName}-${new Date().format('ddMMyy_HHmm')}-${variant.buildType.name}.apk"
        }
    }

    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').canRead()) {
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
    }

    flavorDimensions "version"
    productFlavors {
        demo {
            dimension "version"
            buildConfigField "String", "SERVER_URL", '"http://api.themoviedb.org/"'
            buildConfigField "String", "API_KEY", properties.getProperty("api_key", "")
            versionNameSuffix "-demo"
        }
        live {
            dimension "version"
            buildConfigField "String", "SERVER_URL", '"http://api.themoviedb.org/"'
            buildConfigField "String", "API_KEY", properties.getProperty("api_key", "")
            versionNameSuffix "-live"
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:1.4.2"
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    // viewmodel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1'

    //Camera
    def camerax_version = "1.0.2"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:1.0.0-alpha28"

    //Permissions
    implementation "com.google.accompanist:accompanist-permissions:0.19.0"

    // navigation-compose
    def nav_version = "2.4.2"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // room
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // okhttp3
    def okHttp3_version = "4.9.3"
    implementation "com.squareup.okhttp3:okhttp:$okHttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp3_version"

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    // paging
    implementation "androidx.paging:paging-runtime:3.1.1"
    implementation "androidx.paging:paging-compose:1.0.0-alpha15"

    // glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    // firebase
    implementation 'com.google.firebase:firebase-messaging:23.0.5'

    // workmanager
    implementation "androidx.work:work-runtime-ktx:2.7.1"

    // compose destination
    def compose_destination_version = "1.5.9-beta"
    implementation "io.github.raamcosta.compose-destinations:core:$compose_destination_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$compose_destination_version"

    // coil
    implementation "io.coil-kt:coil-compose:2.1.0"

    // barcode
    implementation 'com.google.mlkit:barcode-scanning:17.0.2'

    // lottie
    implementation 'com.airbnb.android:lottie-compose:5.2.0'

    // pager
    implementation "com.google.accompanist:accompanist-pager:0.13.0"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.13.0"
}